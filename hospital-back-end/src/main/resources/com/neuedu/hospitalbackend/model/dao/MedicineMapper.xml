<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.hospitalbackend.model.dao.MedicineMapper">
    <resultMap id="BaseResultMap" type="Medicine" >
        <result column="id" property="id" jdbcType="SMALLINT" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="specification" property="specification" jdbcType="VARCHAR" />
        <result column="unit" property="unit" jdbcType="VARCHAR" />
        <result column="factory" property="factory" jdbcType="VARCHAR" />
        <result column="formulation" property="formulation" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
        <result column="pinyin_code" property="pinyinCode" jdbcType="VARCHAR" />
        <result column="cost_type" property="costType" jdbcType="VARCHAR" />
        <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    </resultMap>

    <select id="get" resultMap="BaseResultMap" parameterType="Short">
    select id, code, name, specification, unit, factory, formulation, type, unit_price, pinyin_code from medicine where id = #{id}
  </select>

    <select id="list" resultMap="BaseResultMap">
      select id, code, name, specification, unit, factory, formulation, type, unit_price, pinyin_code from medicine
    </select>

    <insert id="insert" parameterType="com.neuedu.hospitalbackend.model.po.Medicine" >
    insert into medicine (code, name, specification, unit, factory, formulation, type, unit_price, pinyin_code)
    values (#{code}, #{name}, #{specification}, #{unit}, #{factory}, #{formulation}, #{type}, #{unitPrice}, #{pinyinCode})
  </insert>

    <insert id="insertSelective" parameterType="com.neuedu.hospitalbackend.model.po.Medicine" >
        insert into medicine
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="code != null" >
                code,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="specification != null" >
                specification,
            </if>
            <if test="unit != null" >
                unit,
            </if>
            <if test="factory != null" >
                factory,
            </if>
            <if test="formulation != null" >
                formulation,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="unitPrize != null" >
                unit_prize,
            </if>
            <if test="pinyinCode != null" >
                pinyin_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=SMALLINT},
            </if>
            <if test="code != null" >
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="specification != null" >
                #{specification,jdbcType=VARCHAR},
            </if>
            <if test="unit != null" >
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="factory != null" >
                #{factory,jdbcType=VARCHAR},
            </if>
            <if test="formulation != null" >
                #{formulation,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="unitPrize != null" >
                #{unitPrize,jdbcType=DECIMAL},
            </if>
            <if test="pinyinCode != null" >
                #{pinyinCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.neuedu.hospitalbackend.model.po.Medicine">
        update medicine set code = #{code}, name = #{name}, specification = #{specification}, unit = #{unit},
         factory = #{factory}, formulation = #{formulation}, type = #{type}, unit_price = #{unitPrice}, pinyin_code = #{pinyinCode} where id = #{id}
    </update>

    <delete id="delete" parameterType="Short">
        delete from medicine where id = #{id}
    </delete>

    <select id="getUnitPriceById" resultType="decimal">
        select unit_price from medicine where id = #{id}
    </select>

    <select id="getMedicineTypeAndUPrice" resultType="HashMap">
        select type, unit_price as unitPrice
        from medicine
        where id = #{id}
    </select>

    <select id="getMedicineTypeAndUPriceByCode" resultType="HashMap">
        select type, unit_price as unitPrice
        from medicine
        where code = #{code}
    </select>

    <select id="listTraditionalMedicine" resultMap="BaseResultMap">
        select *
        from medicine
        where type = '中草药'
        limit 50
    </select>

    <select id="listModernMedicine" resultMap="BaseResultMap">
        select *
        from medicine
        where type != '中草药'
        limit 50
    </select>

    <select id="getCodeById" resultType="String">
        select code
        from medicine
        where id = #{id}
    </select>

    <select id="getIdByCode" resultType="Integer">
        select id
        from medicine
        where code = #{code}
    </select>

    <select id="getCostTypeById" resultType="String">
        select cost_type
        from medicine
        where id = #{id}
    </select>

    <select id="getDepartmentIdByMedicineId" resultType="Integer">
        select department_id
        from medicine
        where id = #{id}
    </select>

</mapper>