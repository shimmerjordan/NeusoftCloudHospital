<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.hospitalbackend.model.dao.PatientCaseMapper" >
  <resultMap id="BaseResultMap" type="PatientCase" >
    <result column="registration_id" property="registrationId" jdbcType="INTEGER" />
    <result column="patient_id" property="patientId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="narrate" property="narrate" jdbcType="VARCHAR" />
    <result column="cur_disease" property="curDisease" jdbcType="VARCHAR" />
    <result column="cur_treat_condition" property="curTreatCondition" jdbcType="VARCHAR" />
    <result column="past_disease" property="pastDisease" jdbcType="VARCHAR" />
    <result column="allergy" property="allergy" jdbcType="VARCHAR" />
    <result column="physical_condition" property="physicalCondition" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="patient_name" property="patientName" jdbcType="VARCHAR" />
    <result column="assist_diagnose" property="assistDiagnose" jdbcType="VARCHAR" />
  </resultMap>



  <insert id="insert" parameterType="PatientCase" >
    insert into patient_case (registration_id, patient_id, role_id, 
      status, narrate, cur_disease, 
      cur_treat_condition, past_disease, allergy, 
      physical_condition, gmt_create, gmt_modified, 
      patient_name, assist_diagnose)
    values (#{registrationId,jdbcType=INTEGER}, #{patientId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{narrate,jdbcType=VARCHAR}, #{curDisease,jdbcType=VARCHAR}, 
      #{curTreatCondition,jdbcType=VARCHAR}, #{pastDisease,jdbcType=VARCHAR}, #{allergy,jdbcType=VARCHAR}, 
      #{physicalCondition,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{patientName,jdbcType=VARCHAR}, #{assistDiagnose,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="PatientCase" >
    insert into patient_case
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="registrationId != null" >
        registration_id,
      </if>
      <if test="patientId != null" >
        patient_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="narrate != null" >
        narrate,
      </if>
      <if test="curDisease != null" >
        cur_disease,
      </if>
      <if test="curTreatCondition != null" >
        cur_treat_condition,
      </if>
      <if test="pastDisease != null" >
        past_disease,
      </if>
      <if test="allergy != null" >
        allergy,
      </if>
      <if test="physicalCondition != null" >
        physical_condition,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="patientName != null" >
        patient_name,
      </if>
      <if test="assistDiagnose != null" >
        assist_diagnose,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="registrationId != null" >
        #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null" >
        #{patientId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="narrate != null" >
        #{narrate,jdbcType=VARCHAR},
      </if>
      <if test="curDisease != null" >
        #{curDisease,jdbcType=VARCHAR},
      </if>
      <if test="curTreatCondition != null" >
        #{curTreatCondition,jdbcType=VARCHAR},
      </if>
      <if test="pastDisease != null" >
        #{pastDisease,jdbcType=VARCHAR},
      </if>
      <if test="allergy != null" >
        #{allergy,jdbcType=VARCHAR},
      </if>
      <if test="physicalCondition != null" >
        #{physicalCondition,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="patientName != null" >
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="assistDiagnose != null" >
        #{assistDiagnose,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="listWaitingPatients" resultType="HashMap">
      select p.id, p.id_card as idCard, pc.registration_id as caseId, pc.patient_name as name, p.gender, p.birthday
      from patient_case pc, patient p
      where pc.patient_id = p.id
          and pc.role_id = #{doctorRoleId}
          and (pc.status = 1 or pc.status = 2)
      order by p.gmt_create asc
  </select>

  <select id="listWaitedPatients" resultType="HashMap">
      select p.id, p.id_card as idCard, pc.registration_id as caseId, pc.patient_name as name, p.gender, p.birthday
      from patient_case pc, patient p
      where pc.patient_id = p.id
          and pc.role_id = #{doctorRoleId}
          and (pc.status = 3 or pc.status = 4)
      order by p.gmt_modified desc
  </select>

  <select id="listPatientsByCaseIdOrName" resultType="HashMap">
    select p.id, p.id_card as idCard, pc.registration_id as caseId, pc.patient_name as name, p.gender, pc.status, p.birthday
    from patient_case pc, patient p
    where pc.patient_id = p.id
      and pc.role_id = #{doctorRoleId}
      <if test = "caseId != null">
        and pc.registration_id = #{caseId}
      </if>
      <if test="patientName != null and patientName != ''">
        and pc.patient_name = #{patientName}
      </if>
  </select>

  <resultMap id="patientCaseInfo" type="HashMap" >
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="narrate" property="narrate" jdbcType="VARCHAR" />
    <result column="cur_disease" property="curDisease" jdbcType="VARCHAR" />
    <result column="cur_treat_condition" property="curTreatCondition" jdbcType="VARCHAR" />
    <result column="past_disease" property="pastDisease" jdbcType="VARCHAR" />
    <result column="allergy" property="allergy" jdbcType="VARCHAR" />
    <result column="physical_condition" property="physicalCondition" jdbcType="VARCHAR" />
    <result column="assist_diagnose" property="assistDiagnose" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getPatientCaseInfo" resultMap="patientCaseInfo">
    select status, narrate, cur_disease, cur_treat_condition, past_disease, allergy, physical_condition, assist_diagnose
    from patient_case
    where registration_id = #{caseId}
  </select>

  <select id="getPatientCaseStatus" resultType="Integer">
    select status
    from patient_case
    where registration_id = #{caseId}
  </select>

  <update id="updatePatientCase">
      update patient_case
      set narrate = #{narrate}, cur_disease = #{curDisease}, cur_treat_condition = #{curTreatCondition},
          past_disease = #{pastDisease}, allergy = #{allergy}, physical_condition = #{physicalCondition},
          status = #{status}, assist_diagnose = #{assistDiagnose}
      where registration_id = #{caseId}
  </update>

  <delete id="deletePatientCaseById">
      delete from patient_case where registration_id = #{registrationId}
  </delete>

  <select id="getPatientIdByCaseId" resultType="Integer">
    select patient_id as patientId
    from patient_case
    where registration_id = #{caseId}
  </select>

  <update id="updatePatientCaseStatus">
    update patient_case
    set status = #{status}
    where registration_id = #{caseId}
  </update>


  <select id="getWaitingAmountById" resultType="int">
    select count(distinct registration_id) as before_amount
    from patient_case pc
    where pc.role_id = #{roleId} and pc.status = 1
    and pc.gmt_create &lt; (select gmt_create from patient_case where registration_id= #{registrationId}) and appointment_date = #{appointmentDateStr}
  </select>

  <select id="listRegistrationsByPatientId" resultType="HashMap">
    select distinct pc.registration_id, pc.role_id, r.appointment_date
    from patient_case pc, registration r
    where pc.patient_id = #{patientId} and pc.status = 1
    and r.patient_id = pc.patient_id
  </select>

</mapper>