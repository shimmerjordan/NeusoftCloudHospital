<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.hospitalbackend.model.dao.DepartmentMapper">
    <resultMap id="BaseResultMap" type="com.neuedu.hospitalbackend.model.po.Department" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="classification" property="classification" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
    </resultMap>

    <select id="get" resultMap="BaseResultMap" parameterType="Integer">
      select id, classification, code, name, type from department where id = #{id}
    </select>

    <select id="list" resultMap="BaseResultMap">
      select id, classification, code, name, type from department
    </select>

    <select id="listByPage" resultMap="BaseResultMap">
      select id, classification, code, name, type from department
    </select>

    <insert id="insert" parameterType="com.neuedu.hospitalbackend.model.po.Department" >
    insert into department (id, code, name,
      classification, type)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{classification,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR})
  </insert>

    <update id="update" parameterType="com.neuedu.hospitalbackend.model.po.Department">
        update department set code = #{code}, name = #{name}, classification = #{classification}, type=#{type} where id = #{id}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from department where id = #{id}
    </delete>
    
    <select id="getClassificationById" resultType="string">
        select classification from department
        where id = #{id}
    </select>

    <select id="listDoctorDepartments" resultType="HashMap">
        select id as departmentId, name as departmentName
        from department
        where type = '临床科室'
    </select>

    <select id="getNameById" resultType="String">
        select name
        from department
        where id = #{id}
    </select>

</mapper>