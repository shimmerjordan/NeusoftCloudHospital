<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.hospitalbackend.model.dao.RecipeMapper" >
  <resultMap id="BaseResultMap" type="Recipe" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="medicine_id" property="medicineId" jdbcType="INTEGER" />
    <result column="case_id" property="caseId" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId"/>
    <result column="amount" property="amount" jdbcType="SMALLINT" />
    <result column="remain_amount" property="remainAmount" jdbcType="SMALLINT" />
    <result column="medicine_type" property="medicineType" jdbcType="TINYINT" />
    <result column="medicine_specification" property="medicineSpecification" jdbcType="VARCHAR"/>
    <result column="medicine_unit" property="medicineUnit" jdbcType="VARCHAR"/>
    <result column="medicine_formulation" property="medicineFormulation" jdbcType="VARCHAR"/>
    <result column="medicine_unit_price" property="medicineUnitPrice" jdbcType="DECIMAL"/>
    <result column="dosage" property="dosage" jdbcType="DECIMAL" />
    <result column="frequency" property="frequency" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="creator_role_id" property="creatorRoleId" jdbcType="INTEGER" />
    <result column="deliver_role_id" property="deliverRoleId" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>

  <insert id="insert" parameterType="Recipe" >
    insert into recipe (id, medicine_id, case_id, department_id, amount, remain_amount,
      medicine_type, medicine_specification, medicine_unit, medicine_formulation, medicine_unit_price
      dosage, frequency, status, creator_role_id, deliver_role_id, gmt_create, gmt_modified)
    values (#{id,jdbcType=INTEGER}, #{medicineId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER},
      #{departmentId,jdbcType=INTEGER}, #{amount,jdbcType=SMALLINT}, #{remainAmount,jdbcType=SMALLINT},
      #{medicineType,jdbcType=TINYINT}, #{medicineSpecification,jdbcType=VARCHAR}, #{medicineUnit,jdbcType=VARCHAR},
      #{medicineFormulation,jdbcType=VARCHAR}, #{medicineUnitPrice,jdbcType=DECIMAL}, #{dosage,jdbcType=DECIMAL}, #{frequency,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{creatorRoleId,jdbcType=INTEGER}, #{deliverRoleId,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="Recipe" >
    insert into recipe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="medicineId != null" >
        medicine_id,
      </if>
      <if test="caseId != null" >
        case_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="remainAmount != null" >
        remain_amount,
      </if>
      <if test="medicineType != null" >
        medicine_type,
      </if>
      <if test="medicineSpecification != null" >
        medicine_specification,
      </if>
      <if test="medicineUnit != null" >
        medicine_unit,
      </if>
      <if test="medicineFormulation != null" >
        medicine_formulation,
      </if>
      <if test="medicineUnitPrice != null" >
        medicine_unit_price,
      </if>
      <if test="dosage != null" >
        dosage,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="creatorRoleId != null" >
        creator_role_id,
      </if>
      <if test="deliverRoleId != null" >
        deliver_role_id,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medicineId != null" >
        #{medicineId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=SMALLINT},
      </if>
      <if test="remainAmount != null" >
        #{remainAmount,jdbcType=SMALLINT},
      </if>
      <if test="medicineType != null" >
        #{medicineType,jdbcType=TINYINT},
      </if>
      <if test="medicineSpecification != null" >
        #{medicineSpecification,jdbcType=VARCHAR},
      </if>
      <if test="medicineUnit != null" >
        #{medicineUnit,jdbcType=VARCHAR},
      </if>
      <if test="medicineFormulation != null" >
        #{medicineFormulation,jdbcType=VARCHAR},
      </if>
      <if test="medicineUnitPrice != null" >
        #{medicineUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="dosage != null" >
        #{dosage,jdbcType=DECIMAL},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorRoleId != null" >
        #{creatorRoleId,jdbcType=INTEGER},
      </if>
      <if test="deliverRoleId != null" >
        #{deliverRoleId,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <resultMap id="AdditionalResultMap" type="HashMap" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="medicine_id" property="medicineId" jdbcType="INTEGER" />
    <result column="case_id" property="caseId" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId"/>
    <result column="amount" property="amount" jdbcType="SMALLINT" />
    <result column="remain_amount" property="remainAmount" jdbcType="SMALLINT" />
    <result column="medicine_type" property="medicineType" jdbcType="TINYINT" />
    <result column="medicine_specification" property="medicineSpecification" jdbcType="VARCHAR"/>
    <result column="medicine_unit" property="medicineUnit" jdbcType="VARCHAR"/>
    <result column="medicine_formulation" property="medicineFormulation" jdbcType="VARCHAR"/>
    <result column="medicine_unit_price" property="medicineUnitPrice" jdbcType="DECIMAL"/>
    <result column="dosage" property="dosage" jdbcType="DECIMAL" />
    <result column="frequency" property="frequency" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="creator_role_id" property="creatorRoleId" jdbcType="INTEGER" />
    <result column="deliver_role_id" property="deliverRoleId" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="transaction_log_status" property="transactionLogStatus" jdbcType="TINYINT"/>
    <result column="m_name" property="medicineName" jdbcType="VARCHAR"/>
  </resultMap>

  <select id="listIndividualRecipe" resultMap="AdditionalResultMap">
    select distinct r.*, t1.status as transaction_log_status
    from recipe r, transaction_log t1
    where r.case_id = #{registrationId} and t1.registration_id = r.case_id
    and t1.project_id = r.medicine_id and t1.collection_id = r.id and (t1.status = 1 or t1.status = 2 or t1.status = 3)
    and t1.gmt_create &gt;= all(SELECT t2.gmt_create
                             from transaction_log t2
                             where t2.project_id = r.medicine_id and t2.registration_id = r.case_id
                             and t2.collection_id = r.id and (t2.status = 1 or t2.status = 2 or t2.status = 3))
  </select>

  <select id="listRecipeInfoByRegistrationId" resultMap="AdditionalResultMap">
    select r.id, r.status, r.amount, r.dosage, r.frequency, r.medicine_unit, r.medicine_type,
            r.medicine_formulation, r.medicine_id, m.name as m_name, r.medicine_specification
    from recipe r, medicine m
    where r.case_id = #{caseId} and r.medicine_id = m.id
  </select>

  <update id="updateStatus">
    update recipe set status = #{status}
    where id = #{collectionId} and medicine_id = #{medicineId}
  </update>

  <update id="updateStatusAndDeliverId">
    update recipe set status = #{status}, deliver_role_id = #{deliverId}
    where id = #{collectionId} and medicine_id = #{medicineId}
  </update>


  <update id="updateRemainAmount">
      update recipe set remain_amount = remain_amount - #{returnAmount}
      where id = #{collectionId} and medicine_id = #{projectId}
  </update>


  <select id="listRecipesByRegistrationIdOrDate" resultType="HashMap">
    select distinct r.case_id as caseId, p.name
    from recipe r, transaction_log t1, patient p
    <where>
      <if test="caseId != null">
        r.case_id = #{caseId}
      </if>
      <if test="chargeDateBeginStr != null">
        and t1.gmt_create &gt;= #{chargeDateBeginStr}
      </if>
      <if test="chargeDateEndStr != null">
        and t1.gmt_create &lt;= #{chargeDateEndStr}
      </if>
      and t1.registration_id = r.case_id and t1.patient_id = p.id and t1.collection_id = r.id
      and (t1.status = 1 or t1.status = 2)
    </where>
  </select>

    <select id="getLatestId" resultType="Integer">
        select id
        from recipe
        order by id desc
        limit 1
    </select>

   <delete id="deleteById">
       delete
       from recipe
       where id = #{id}
   </delete>

  <select id="getInfo" resultMap="AdditionalResultMap">
    select r.*, m.name as m_name
    from recipe r, medicine m
    where case_id = #{caseId} and r.medicine_id = m.id
  </select>

</mapper>